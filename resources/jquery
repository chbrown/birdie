var providers = require('../providers');

// the provider function signature is (name, version, minified)
// even though "name" is unnecessary here, we want to keep it parallel
function jquery_com(name, version, minified) {
  return 'http://code.jquery.com/jquery-' + version + (minified ? '.min.js' : '.js');
}

var versions = ['2.0.0', '1.9.1', '1.9.0', '1.8.3', '1.8.2', '1.8.1', '1.8.0', '1.7.2', '1.7.1', '1.7', '1.6.4', '1.6.2', '1.6.1', '1.4.4', '1.4.3', '1.4.2', '1.4.1', '1.3.2', '1.3.1', '1.3.0', '1.2.6', '1.2.3'];

var aliases = {'*': '1.9.1'};

module.exports = function(version, callback) {
  version = aliases[version] || version;
  var url_functions = [jquery_com, providers.cloudflare, providers.google];
  if (versions.indexOf(version) > -1) {
    callback(undefined, {
      'jquery.js': url_functions.map(function(fn) { return fn('jquery', version, true); }),
      'jquery.max.js': url_functions.map(function(fn) { return fn('jquery', version, false); })
    });
  }
  else {
    callback(new Error('Unsupported version = ' + version));
  }
};
